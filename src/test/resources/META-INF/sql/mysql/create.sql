DROP TABLE IF EXISTS T_BLOG_POST_RELATION;
DROP TABLE IF EXISTS T_BLOG_POST_DATA;
DROP TABLE IF EXISTS T_BLOG_POST_CATEGORY;
DROP TABLE IF EXISTS T_BLOG_POST_TAG;
DROP TABLE IF EXISTS T_BLOG_POST;
DROP TABLE IF EXISTS T_BLOG_TAG;
DROP TABLE IF EXISTS T_BLOG_CATEGORY;
DROP TABLE IF EXISTS T_BLOG_AUTHOR;
DROP TABLE IF EXISTS T_BLOG_SITE;
DROP TABLE IF EXISTS T_ALBUM;
DROP TABLE IF EXISTS T_ALBUM_DATA;
DROP TABLE IF EXISTS T_BLOG_SOME_POJO;

CREATE TABLE T_BLOG_SITE
(
	id BIGINT NOT NULL AUTO_INCREMENT,
	title VARCHAR(255) NULL,
	description VARCHAR(255) NULL,
	author VARCHAR(255) NULL,
	theme VARCHAR(50) NULL,
	PRIMARY KEY (id)
) ENGINE=InnoDB;

INSERT INTO T_BLOG_SITE VALUES (1, 'Myšlenky Otce Fura', 'Blog o Javě', 'Jan Novotný', 'back-n-blue');
INSERT INTO T_BLOG_SITE VALUES (2, 'FG Forrest', 'Firemní web', 'Lada Adámková', 'red-n-white');

CREATE TABLE T_BLOG_POST_RELATION
(
	id BIGINT NOT NULL AUTO_INCREMENT,
	idPost BIGINT NOT NULL,
	type VARCHAR(50) NULL,
	relationLocator VARCHAR(255) NOT NULL,
	properties VARCHAR(255) NULL,
	idVersion BIGINT NOT NULL,
	PRIMARY KEY (id),
	UNIQUE (idVersion, relationLocator),
	KEY (idPost)
) ENGINE=InnoDB
;

CREATE TABLE T_BLOG_POST_DATA
(
	id BIGINT NOT NULL AUTO_INCREMENT,
	idPost BIGINT NOT NULL,
	idVersion BIGINT NOT NULL,
	title VARCHAR(255) NULL,
	perex TEXT NULL,
	content MEDIUMTEXT NULL,
	PRIMARY KEY (id),
	KEY (idPost)
) ENGINE=InnoDB
;

CREATE TABLE T_BLOG_POST_CATEGORY
(
	id BIGINT NOT NULL AUTO_INCREMENT,
	idPost BIGINT NOT NULL,
	idCategory BIGINT NOT NULL,
	idVersion BIGINT NULL,
	PRIMARY KEY (id),
	KEY (idCategory),
	KEY (idPost)
) ENGINE=InnoDB
;

CREATE TABLE T_BLOG_POST_TAG
(
	id BIGINT NOT NULL AUTO_INCREMENT,
	idPost BIGINT NOT NULL,
	idTag BIGINT NOT NULL,
	idVersion BIGINT NOT NULL,
	PRIMARY KEY (id),
	KEY (idPost),
	KEY (idTag)
) ENGINE=InnoDB
;

CREATE TABLE T_BLOG_POST
(
	id BIGINT NOT NULL AUTO_INCREMENT,
	idBlog BIGINT NULL,
	idAuthor BIGINT NULL,
	votesUp INTEGER NULL DEFAULT 0,
	votesDown INTEGER NULL DEFAULT 0,
	rating FLOAT(0) NULL DEFAULT 0,
	postReads INTEGER NULL DEFAULT 0,
	reactions INTEGER NULL DEFAULT 0,
	PRIMARY KEY (id),
	KEY (idBlog)
) ENGINE=InnoDB
;

CREATE TABLE T_BLOG_TAG
(
	id BIGINT NOT NULL AUTO_INCREMENT,
	name VARCHAR(255) NULL,
	PRIMARY KEY (id),
	UNIQUE (name)
) ENGINE=InnoDB
;

INSERT INTO T_BLOG_TAG VALUES (1, 'Java');
INSERT INTO T_BLOG_TAG VALUES (2, 'AJAX');
INSERT INTO T_BLOG_TAG VALUES (3, 'MySQL');
INSERT INTO T_BLOG_TAG VALUES (4, 'HTML');
INSERT INTO T_BLOG_TAG VALUES (5, 'jQuery');

CREATE TABLE T_BLOG_AUTHOR
(
	id BIGINT NOT NULL AUTO_INCREMENT,
	name VARCHAR(255) NULL,
	PRIMARY KEY (id),
	UNIQUE (name)
) ENGINE=InnoDB
;

INSERT INTO T_BLOG_AUTHOR VALUES (1, 'Jan Novotný');
INSERT INTO T_BLOG_AUTHOR VALUES (2, 'Lada Adámková');

CREATE TABLE T_BLOG_CATEGORY
(
	id BIGINT NOT NULL AUTO_INCREMENT,
	name VARCHAR(255) NULL,
	parentCategory BIGINT NULL,
	description VARCHAR(255) NULL,
	PRIMARY KEY (id),
	UNIQUE (name),
	KEY (parentCategory)
) ENGINE=InnoDB
;

INSERT INTO T_BLOG_CATEGORY VALUES (1, 'Novinky', null, 'Informace o čerstvých novinkách');
INSERT INTO T_BLOG_CATEGORY VALUES (2, 'Technologie', null, 'Technologický článek');
INSERT INTO T_BLOG_CATEGORY VALUES (3, 'Marketing', null, 'Marketingový článek');

ALTER TABLE T_BLOG_POST_RELATION ADD CONSTRAINT FK_T_BLOG_RELATION_T_BLOG_POST
	FOREIGN KEY (idPost) REFERENCES T_BLOG_POST (id)
	ON DELETE CASCADE
;

ALTER TABLE T_BLOG_POST_DATA ADD CONSTRAINT FK_T_BLOG_POST_DATA_T_BLOG_POST
	FOREIGN KEY (idPost) REFERENCES T_BLOG_POST (id)
	ON DELETE CASCADE
;

ALTER TABLE T_BLOG_POST_CATEGORY ADD CONSTRAINT FK_T_BLOG_POST_CATEGORY_T_BLOG_CATEGORY
	FOREIGN KEY (idCategory) REFERENCES T_BLOG_CATEGORY (id)
	ON DELETE CASCADE
;

ALTER TABLE T_BLOG_POST_CATEGORY ADD CONSTRAINT FK_T_BLOG_POST_CATEGORY_T_BLOG_POST
	FOREIGN KEY (idPost) REFERENCES T_BLOG_POST (id)
	ON DELETE CASCADE
;

ALTER TABLE T_BLOG_POST_TAG ADD CONSTRAINT FK_T_BLOG_POST_TAG_T_BLOG_POST
	FOREIGN KEY (idPost) REFERENCES T_BLOG_POST (id)
	ON DELETE CASCADE
;

ALTER TABLE T_BLOG_POST_TAG ADD CONSTRAINT FK_T_BLOG_POST_TAG_T_BLOG_TAG
	FOREIGN KEY (idTag) REFERENCES T_BLOG_TAG (id)
	ON DELETE CASCADE
;

ALTER TABLE T_BLOG_POST ADD CONSTRAINT FK_T_BLOG_POST_T_BLOG_SITE
	FOREIGN KEY (idBlog) REFERENCES T_BLOG_SITE (id)
	ON DELETE CASCADE
;

ALTER TABLE T_BLOG_CATEGORY ADD CONSTRAINT FK_T_BLOG_CATEGORY_T_BLOG_CATEGORY
	FOREIGN KEY (parentCategory) REFERENCES T_BLOG_CATEGORY (id)
	ON DELETE CASCADE
;